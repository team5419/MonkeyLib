plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
}

def ROBOT_CLASS = ""

repositories {
    mavenCentral()
}

dependencies {
    api 'org.jetbrains.kotlin:kotlin-stdlib'
    //api ctre()
    //api wpilib()

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.1'
}

group = 'org.team5499'
version = '1.0'

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    dependsOn 'cleanTest'

    useJUnitPlatform()

    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
        showStandardStreams true
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

jacoco {
    toolVersion = '0.8.2'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

task tox {
    doLast {
        exec {
            executable 'tox'
        }
    }
}

test.finalizedBy 'tox'
task install_hooks(dependsOn: 'tox')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'MonkeyLib'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'MonkeyLib'
                description = 'Commonly used utilities in FRC Team 5499\'s codebase'
                url = 'https://github.com/team5499/MonkeyLib'
            }
        }
    }
    repositories {
        maven {
            // this line will direct to our maven repo
            // url = "$buildDir/"
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
